/* eslint-disable no-undef */
// ADD ELEMENTS ON TEMPLATE
$(async () => {
  // DISBLE ALL MENU ADMIN
  if ((await getCookieInfo("unit")) === 1) {
    $(".menu-admin").hide();
  }
});

// FUNCTION GET COOKIES INFO
const getCookieInfo = async (option) => {
  const result = await fetch("http://" + location.host + "/session", {
    headers: { "Content-Type": "application/json" },
    method: "post",
    body: '{ "sessionId": "' + option + '" }',
  });
  const ret = await result.json();
  return ret.result;
};

// FUNCTION FOR POPULATE TYPEHEAD
const substringMatcher = function (strs) {
  return function findMatches(q, cb) {
    const matches = [];
    substrRegex = new RegExp(q, "i");
    $.each(strs, function (i, str) {
      if (substrRegex.test(str.cnpj)) {
        matches.push(str.cnpj);
      }
    });
    cb(matches);
  };
};

// IF LOAD CNPJ ON ADD CLIENT POPULATE CNPJ INPUT
if ($("#cnpj").length > 0) {
  (async () => {
    const connFetch = await fetch("http://" + location.host + "/client-cnpjs", {
      headers: { "Content-Type": "application/json" },
      method: "get",
    });

    const response = await connFetch.json();

    $("#cnpj").typeahead(
      {
        hint: true,
        highlight: true,
        minLength: 1,
      },
      {
        name: "states",
        source: substringMatcher(response),
      }
    );
  })();
}

// ACTION ADD CLIENT
$("#add-client-form").click(async () => {
  const company = $("#company").val();
  const cnpj = $("#cnpj").val();
  const database = $("#database").val();
  const rootwindelnfe = $("#rootwindelnfe").val();
  const name = $("#name").val();
  const host = $("#host").val();
  const port = $("#port").val();
  const user = $("#user").val();
  const pass = $("#pass").val();
  const optionintegrador = $("#optionintegrador").is(":checked");
  const optionsincronizador = $("#optionsincronizador").is(":checked");
  const optionbi = $("#optionbi").is(":checked");
  const optionbackup = $("#optionbackup").is(":checked");
  const backupfolder = $("#backupfolder").val();

  if (
    company &&
    cnpj &&
    database &&
    rootwindelnfe &&
    name &&
    host &&
    port &&
    user &&
    pass
  ) {
    const datas = {
      company,
      cnpj,
      database,
      rootwindelnfe,
      name,
      host,
      port,
      user,
      pass,
      optionintegrador,
      optionsincronizador,
      optionbi,
      optionbackup,
      backupfolder
    };
    const connFetch = await fetch("http://" + location.host + "/client", {
      headers: { "Content-Type": "application/json" },
      method: "post",
      body: JSON.stringify(datas),
    });

    const response = await connFetch.json();

    if (response) {
      $(location).attr("href", "http://" + location.host + "/clients");
    } else {
      alert("Houve um problema desconhecido ao criar o cliente");
    }
  } else {
    alert("Todos os campos são obrigatórios.");
  }
});

// ACTION UPD CLIENT
$("#upd-client-form").click(async () => {
  const company = $("#company").val();
  const cnpj = $("#cnpj").val();
  const database = $("#database").val();
  const rootwindelnfe = $("#rootwindelnfe").val();
  const name = $("#name").val();
  const host = $("#host").val();
  const port = $("#port").val();
  const user = $("#user").val();
  const pass = $("#pass").val();
  const uuid = $("#uuid").val();
  const optionintegrador = $("#optionintegrador").is(":checked");
  const optionsincronizador = $("#optionsincronizador").is(":checked");
  const optionbi = $("#optionbi").is(":checked");
  const optionbackup = $("#optionbackup").is(":checked");
  const backupfolder = $("#backupfolder").val();

  if (
    company &&
    cnpj &&
    database &&
    rootwindelnfe &&
    name &&
    host &&
    port &&
    user &&
    pass
  ) {
    const datas = {
      company,
      cnpj,
      database,
      rootwindelnfe,
      name,
      host,
      port,
      user,
      pass,
      uuid,
      optionintegrador,
      optionsincronizador,
      optionbi,
      optionbackup,
      backupfolder
    };
    const connFetch = await fetch("http://" + location.host + "/client-upd", {
      headers: { "Content-Type": "application/json" },
      method: "post",
      body: JSON.stringify(datas),
    });

    const response = await connFetch.json();

    if (response) {
      $(location).attr("href", "http://" + location.host + "/clients");
    } else {
      alert("Houve um problema desconhecido ao alterar o cliente");
    }
  } else {
    alert("Todos os campos são obrigatórios.");
  }
});

// ACTION ADD USER
$("#add-user").click(() => {
  $(location).attr("href", "http://" + location.host + "/user");
});

// ACTION ADD NEWS
$("#add-new").click(() => {
  $(location).attr("href", "http://" + location.host + "/new");
});

// ACTION ADD VERSION
$("#add-version").click(() => {
  $(location).attr("href", "http://" + location.host + "/version");
});

// ACTION BUTTON ADD NEW
$("#add-new-form").click(async () => {
  const title = $("#title").val();
  const text = $("#text").val();

  if (title && text) {
    const datas = {
      title,
      text,
    };

    const connFetch = await fetch("http://" + location.host + "/new", {
      headers: { "Content-Type": "application/json" },
      method: "post",
      body: JSON.stringify(datas),
    });
    const response = await connFetch.json();

    if (response.error) {
      alert(response.error);
    } else {
      $(location).attr("href", "http://" + location.host + "/news");
    }
  } else {
    alert("Todos os campos devem ser preenchidos");
  }
});

// ACTION BUTTON UPD NEW
$("#upd-new-form").click(async () => {
  const title = $("#title").val();
  const text = $("#text").val();
  const id = $("#id").val();

  if (title && text) {
    const datas = {
      id,
      title,
      text,
    };

    const connFetch = await fetch("http://" + location.host + "/new-upd", {
      headers: { "Content-Type": "application/json" },
      method: "post",
      body: JSON.stringify(datas),
    });
    const response = await connFetch.json();

    if (response.error) {
      alert(response.error);
    } else {
      $(location).attr("href", "http://" + location.host + "/news");
    }
  } else {
    alert("Todos os campos devem ser preenchidos");
  }
});

// ACTION BUTTON ADD USER
$("#add-user-form").click(async () => {
  const name = $("#name").val();
  const email = $("#email").val();
  const password = $("#password").val();
  const passwordii = $("#passwordii").val();
  const unit = $("#unit").is(":checked");

  if (name && email && password) {
    if (password === passwordii) {
      // INSERT DATA
      const datas = {
        name,
        email,
        password,
        unit,
      };

      const connFetch = await fetch("http://" + location.host + "/users", {
        headers: { "Content-Type": "application/json" },
        method: "post",
        body: JSON.stringify(datas),
      });
      const response = await connFetch.json();

      if (response.error) {
        alert(response.error);
      } else {
        $(location).attr("href", "http://" + location.host + "/users");
      }
    } else {
      alert("As senhas não são iguais");
    }
  } else {
    alert("Todos os campos devem ser preenchidos");
  }
});

// ACTION BUTTON USER UPDATE
$("#add-user-form-alt").click(async () => {
  const name = $("#name").val();
  const email = $("#email").val();
  const password = $("#password").val();
  const passwordii = $("#passwordii").val();
  const id = $("#iduser").val();
  const unit = $("#unit").is(":checked");

  if (name && email) {
    if (password) {
      if (password === passwordii) {
        const datas = {
          id,
          name,
          email,
          password,
          unit,
        };

        const connFetch = await fetch("http://" + location.host + "/user-alt", {
          headers: { "Content-Type": "application/json" },
          method: "post",
          body: JSON.stringify(datas),
        });
        const response = connFetch.json();

        if (response.error) {
          alert(response.error);
        } else {
          $(location).attr("href", "http://" + location.host + "/users");
        }
      } else {
        alert("As senhas não são iguais");
      }
    } else {
      const datas = {
        id,
        name,
        email,
        unit,
      };

      const connFetch = await fetch("http://" + location.host + "/user-alt", {
        headers: { "Content-Type": "application/json" },
        method: "post",
        body: JSON.stringify(datas),
      });
      const response = connFetch.json();

      if (response.error) {
        alert(response.error);
      } else {
        $(location).attr("href", "http://" + location.host + "/users");
      }
    }
  } else {
    alert("Todos os campos devem ser preenchidos");
  }
});

$("#add-client").click(async () => {
  $(location).attr("href", "http://" + location.host + "/client");
});

$("#clear-log").click(async () => {
  $(location).attr("href", "http://" + location.host + "/clearlog");
});

$(".logout-but").on("click", (event) => {
  $(location).attr("href", "http://" + location.host + "/logout");
});

$("#change-origin").on("change", (event) => {
  $(location).attr("href", "http://" + location.host + "/logs/" + $("#change-origin").val());
});
